# Defaults tasks for role wp / Wordpress
- name: Importing specific distro variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution }}.yml"
  tags:
    - vars

- include_tasks: selinux.yml

- block:
    - name: Creating mandatory DB
      include_role:
        name: mysql
        tasks_from: db_remote
      vars:
        db_user: "{{ wp_db_user }}"
        db_pass: "{{ wp_db_pass }}"
        db_name: "{{ wp_db_name }}"
        mysql_host: "{{ wp_mysql_host }}"

    - name: Opening iptables if needed on remote mysql host
      include_role:
        name: iptables
        tasks_from: remote-mysqld
      vars:
        mysql_host: "{{ wp_mysql_host }}"
  when: wp_use_remote_mysql_host
  delegate_to: "{{ wp_mysql_host }}"

- include_role:
    name: mysql
  when: not wp_use_remote_mysql_host

- name: Creating mandatory (local) DB
  include_role:
    name: mysql
    tasks_from: db
  vars:
    mysql_db_user: "{{ wp_db_user }}"
    mysql_db_pass: "{{ wp_db_pass }}"
    mysql_db_name: "{{ wp_db_name }}"
  when: not wp_use_remote_mysql_host
  tags:
    - db

- name: Configuring httpd
  import_role:
    name: httpd
  vars:
    httpd_tls: "{{ wp_httpd_tls }}"

- name: Configuring httpd vhost
  template:
    src: 50_wp_vhost.conf.j2
    dest: /etc/httpd/conf.d/50_wp_vhost.conf
    mode: 0644
  notify:
    - restart_httpd

- name: Configuring https
  template:
    src: "{{ item }}.j2"
    dest: "/etc/httpd/conf.d/{{ item }}"
    mode: 0644
  notify:
    - restart_httpd
  with_items:
    - ssl-wp-vhost.conf
  when: wp_httpd_tls

- import_role:
    name: httpd
    tasks_from: pki-tls
  vars:
    pki_hostname: "{{ wp_httpd_hostname }}"
  notify:
    - restart_httpd
  tags:
    - tls
  when: wp_httpd_tls

- name: Adding SCL php
  include_role:
    name: httpd
    tasks_from: scl-php
  tags:
    - php
  when: ansible_distribution_major_version|int < 8

- name: Adding httpd php task
  include_role:
    name: httpd
    tasks_from: php
  tags:
    - php
  when: ansible_distribution_major_version|int > 7

- name: Ensuring we have local directory for instance
  file:
    path: "{{ wp_local_path }}"
    state: directory

- name: Ensuring we can uncompress wordpress core/plugins
  yum:
    name: ['unzip','tar','gzip']
    state: installed

- name: Downloading (once) wordpress version
  unarchive:
    src: "https://wordpress.org/wordpress-{{ wp_release }}.tar.gz"
    remote_src: yes
    dest: "{{ wp_local_path }}"
    creates: "{{ wp_local_path }}/wp-admin"
    extra_opts:
      - --strip-components=1
  register: wp_new_install
  tags:
    - api

- name: Call WP api to automatically create keys on install
  uri:
    url: https://api.wordpress.org/secret-key/1.1/salt/
    return_content: True
  when: wp_new_install is changed
  register: wp_api_keys
  tags:
    - api

- name: Minimal configuration for wordpress
  template:
    src: wp-config.php.j2
    dest: "{{ wp_local_path }}/wp-config.php"
  when: wp_new_install is changed
  tags:
    - config

- name: Upgrading wordpress plugins if needed
  unarchive:
    src: "https://downloads.wordpress.org/plugin/{{ item.name }}.{{ item.version }}.zip"
    remote_src: yes
    dest: "{{ wp_local_path | default('/var/www/wordpress') }}/wp-content/plugins/"
  with_items: "{{ wp_plugins }}"
  tags:
    - plugins

- block:
    - name: Ensuring we have fedora-autologin plugin directory
      file:
        path: "{{ wp_local_path | default('/var/www/wordpress') }}/wp-content/plugins/fedora-autologin"
        state: directory

    - name: Configuring fedora-autologin IdP URL
      template:
        src: fedora-autologin.php.j2
        dest: "{{ wp_local_path | default('/var/www/wordpress') }}/wp-content/plugins/fedora-autologin/fedora-autologin.php"
  when: wp_openid_redirect

- name: Ensuring centos theme directory exists
  file:
    path: "{{ wp_local_path | default('/var/www/wordpress') }}/wp-content/themes/{{ wp_theme_name}}-{{ wp_theme_version }}/"
    state: directory
  tags: theme

- name: Update centos theme files
  unarchive:
    src: "https://gitlab.com/api/v4/projects/CentOS%2Fartwork%2Fcentos-web%2F{{ wp_theme_name }}/packages/generic/release/{{ wp_theme_version }}/{{ wp_theme_name }}.zip"
    dest: "{{ wp_local_path | default('/var/www/wordpress') }}/wp-content/themes/{{ wp_theme_name}}-{{ wp_theme_version }}/"
    remote_src: true
  tags: theme

- name: Ensuring backup user and jobs
  include_role:
    name: centos-backup
    tasks_from: client

- include_role:
    name: postfix
    tasks_from: relay_to
  vars:
    postfix_relay_to: True
